name: Build Desktop Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Build Next.js app
      run: npm run build
    
    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: npm run electron:build:win
    
    - name: Build Electron app (macOS)
      if: matrix.os == 'macos-latest'
      run: npm run electron:build:mac
    
    - name: Build Electron app (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: npm run electron:build:linux
    
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable
        path: |
          dist/*.exe
          dist/win-unpacked/
    
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-executable
        path: |
          dist/*.dmg
          dist/mac/
    
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-executable
        path: |
          dist/*.AppImage
          dist/linux-unpacked/
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.exe
          dist/*.dmg
          dist/*.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}